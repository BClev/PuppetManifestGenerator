#
# Module manifest for module 'PuppetManifestGenerator'
#
# Generated by: James Pogran
#
# Generated on: 4/15/2016
#

@{
  # Script module or binary module file associated with this manifest.
  RootModule = 'PuppetManifestGenerator.psm1'

  # Version number of this module.
  ModuleVersion = '1.0'

  # ID used to uniquely identify this module
  GUID = '7fa3386a-ccc2-47d8-bfac-9bcd8f036dc7'

  # Author of this module
  Author = 'James Pogran, Glenn Sarti, Roby Reynolds, Eric Banks'

  # Company or vendor of this module
  CompanyName = 'Puppet'

  # Copyright statement for this module
  Copyright = '(c) 2016 Puppet. All rights reserved.'

  # Description of the functionality provided by this module
  Description = 'Generate Puppet manifests from existing infrastructure without installing any software'

  # Minimum version of the Windows PowerShell engine required by this module
  PowerShellVersion = '2.0'

  # Minimum version of Microsoft .NET Framework required by this module
  # DotNetFrameworkVersion = ''

  # Minimum version of the common language runtime (CLR) required by this module
  # CLRVersion = ''

  # Modules that must be imported into the global environment prior to importing this module
  # RequiredModules = @()

  # Assemblies that must be loaded prior to importing this module
  # RequiredAssemblies = @()

  # Script files (.ps1) that are run in the caller's environment prior to importing this module.
  # ScriptsToProcess = @()

  # Type files (.ps1xml) to be loaded when importing this module
  # TypesToProcess = @()

  # Format files (.ps1xml) to be loaded when importing this module
  # FormatsToProcess = @()

  # Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
  # NestedModules = @()

  # Functions to export from this module
  FunctionsToExport = '*'

  # Cmdlets to export from this module
  CmdletsToExport = '*'

  # Variables to export from this module
  VariablesToExport = '*'

  # Aliases to export from this module
  AliasesToExport = '*'

  # List of all modules packaged with this module
  # ModuleList = @()
}
